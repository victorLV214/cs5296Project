pipeline {
    agent {
        label 'build-agent-1'
    }
    options {
        timestamps()
    }

    stages {
        stage('Record Start Time') {
            steps {
                script {
                    def buildStart = System.currentTimeMillis()
                    echo "üïí BUILD_START_MS = ${buildStart}"
                }
            }
        }

        stage('Git') {
            steps {
                git url: 'https://github.com/gothinkster/spring-boot-realworld-example-app.git', branch: 'master'
            }
        }

        stage('Build') {
            steps {
                sh './gradlew build -x test -x spotlessCheck -x spotlessApply'
            }
        }

        stage('Deploy') {
            steps {
                sh '''
                    if [ -f realworld.pid ]; then
                        kill $(cat realworld.pid) || true
                        rm realworld.pid
                    fi
                    nohup java -jar build/libs/*.jar --server.port=8090 > realworld.log 2>&1 &
                '''
            }
        }

        stage('Verify') {
            steps {
                sh '''
                    echo "verifying..."
                    sleep 60
                    curl -s http://localhost:8090/tags || echo "failed to verify"
                '''
            }
        }

        stage('Record End Time') {
            steps {
                script {
                    def buildEnd = System.currentTimeMillis()
                    echo "üïí BUILD_END_MS = ${buildEnd}"
                }
            }
        }
    }

    post {
        success {
            echo "‚úÖ Build succeeded: http://localhost:8090"
        }
        failure {
            echo "‚ùå Build failed"
        }
    }
}
